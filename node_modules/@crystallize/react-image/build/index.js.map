{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nlet DEV = false;\ntry {\n  DEV = process.env.NODE_ENV !== \"production\";\n} catch (e) {\n  DEV = false;\n}\n\nfunction warn(msg) {\n  if (DEV) {\n    console.warn(`@crystallize/react-image: ${msg}`);\n  }\n}\n\nconst getVariantSrc = variant => `${variant.url} ${variant.width}w`;\n\nconst ReactImage = ({ children: childRenderFunc, ...restOfAllProps }) => {\n  // Regular image\n  if (restOfAllProps.src) {\n    if (childRenderFunc) {\n      return childRenderFunc(restOfAllProps);\n    }\n\n    return <img {...restOfAllProps} />;\n  }\n\n  // Continue using data from Crystallize\n  const {\n    url,\n    sizes,\n    variants,\n    altText,\n    alt: altPassed,\n    className,\n    ...rest\n  } = restOfAllProps;\n\n  const vars = variants || [];\n  const alt = typeof altPassed === \"string\" ? altPassed : altText;\n\n  const hasVariants = vars.length > 0;\n\n  // Determine srcSet\n  const std = vars.filter(v => v.url && !v.url.endsWith(\".webp\"));\n  const webp = vars.filter(v => v.url && v.url.endsWith(\".webp\"));\n  const srcSet = std.map(getVariantSrc).join(\", \");\n  const srcSetWebp = webp.map(getVariantSrc).join(\", \");\n\n  // Ensure fallback src for older browsers\n  const src = url || (hasVariants ? std[0].url : undefined);\n\n  if (childRenderFunc) {\n    return childRenderFunc({\n      src,\n      srcSet,\n      srcSetWebp,\n      sizes,\n      className,\n      ...rest,\n      alt\n    });\n  }\n\n  if (hasVariants && !sizes) {\n    warn(\n      \"You have provided variants, but not sizes. This has a negative impact on performance. Check out https://crystallize.com/blog/react-image-sizes-attribute-for-fast-ecommerce\"\n    );\n  }\n\n  return (\n    <picture className={className}>\n      {srcSetWebp.length > 0 && (\n        <source srcSet={srcSetWebp} type=\"image/webp\" sizes={sizes} />\n      )}\n      {srcSet.length > 0 && (\n        <source srcSet={srcSet} type=\"image/jpeg\" sizes={sizes} />\n      )}\n\n      <img src={src} sizes={sizes} {...rest} alt={alt} />\n    </picture>\n  );\n};\n\nReactImage.propTypes = {\n  children: PropTypes.func,\n  src: PropTypes.string,\n  url: PropTypes.string,\n  variants: PropTypes.arrayOf(\n    PropTypes.shape({\n      url: PropTypes.string,\n      width: PropTypes.number\n    })\n  ),\n  sizes: PropTypes.string\n};\n\nexport default ReactImage;\n"]}